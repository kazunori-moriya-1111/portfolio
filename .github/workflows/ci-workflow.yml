name: CI flow

on: [push, workflow_dispatch]

jobs:
  ci:
    name: ci
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: src

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: composer install
        if: steps.cache.outputs.cache-hit != 'true'
        run: composer install -n --prefer-dist

      - name: copy .env
        run: cp .env.example .env

      - name: generate key
        run: php artisan key:generate

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: migrate
        run: php artisan migrate:refresh --seed
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite

      - name: run node.js
        run: npm run dev

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test --filter http
